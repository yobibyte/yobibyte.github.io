from compressor.data import PaperDB
from pandas.core.dtypes.dtypes import datetime
from tqdm import tqdm
import pandas as pd


def generate_html_report(df: pd.DataFrame, header: str, fname: str, full_text_summary: bool = False):
    # Summarise the latest results from arxiv.
    with open(fname, "w") as f:
        f.write(header)
        for _, paper in tqdm(df.iterrows(), total=len(df)):
            title = paper.title
            url = paper.url
            if full_text_summary:
                raise ValueError("Full text summary is not yet supported. Stay tuned.")
            else:
                summary = paper.abstract_compressed
            f.write(f"<hr>")
            f.write(f"<h3>{title}</h3>\n")
            f.write(f"<p>{paper.authors}</p>\n")
            f.write(f"<p><a href='{url}'>{url}</a></p>\n")
            f.write(f"<p><b>Compressor summary</b>: {summary}</p>")


if __name__ == '__main__':
    db = PaperDB('../../compressor/papers.parquet')
    #crawler.crawl_arxiv(db)
    #c = ArxivCompressor(OrcaModel(), db)
    #c.compress()

    arxiv_df = db.get_papers_for_source("arxiv")
    latest_date = max(arxiv_df.date_published.values)
    arxiv_df = arxiv_df.loc[arxiv_df.date_published == latest_date]
    print(f"Summarising for date: {latest_date}")
    fname =f"../arxiv_compressed/{latest_date}.html"
    today = datetime.now().strftime("%Y-%m-%d")
    header = f"""
            <meta name="viewport" content="width=device-width, initial-scale=1.0" />
            <link rel="stylesheet" href="../style.css"/>
            <title>Welcome to yobihome</title>
            <a href="https://yobibyte.github.io/"><img src="../pics/socrat.png" class="center"></a>
            <h1>arxiv compressed, {today}</h1>
            <p>This page contains one-sentence summaries of cs.AI/ML/CV/CL papers announced on {today} generated by the compressor, my personal LLM-based project.</p>
    """
    generate_html_report(arxiv_df, header, fname)
